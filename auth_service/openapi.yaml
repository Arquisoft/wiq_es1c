openapi: 3.0.0
info:
  title: Authentication Service API
  description: API endpoints for user authentication
  version: 1.0.0
servers:
  - url: http://localhost:8001
paths:
  /api/auth/register:
    post:
      summary: Register User
      description: Registers a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username of the new user.
                password:
                  type: string
                  description: Password of the new user.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for the registered user.
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message if registration fails.
        '500':
          description: Internal Server Error

  /api/auth/login:
    post:
      summary: User Login
      description: Logs in an existing user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username of the user.
                password:
                  type: string
                  description: Password of the user.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for the logged-in user.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message if login fails.
        '500':
          description: Internal Server Error

  /api/auth/verify:
    post:
      summary: Verify Token
      description: Verifies the validity of a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: JWT token to verify.
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /api/auth/getName:
    post:
      summary: Get Username
      description: Retrieves the username of the authenticated user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: JWT token for authentication.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Username of the authenticated user.
                  createdAt:
                    type: string
                    format: date-time
                    description: Creation date of the authenticated user's account.
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api/user/getUsers:
    get:
      summary: Get All Users
      description: Retrieves the list of all users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Username of the user.
                    id:
                      type: integer
                      description: ID of the user.
        '500':
          description: Internal Server Error

  /api/user/getUser:
    get:
      summary: Get User by ID
      description: Retrieves a user by their ID.
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
            description: ID of the user to retrieve.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: ID of the user.
                      name:
                        type: string
                        description: Username of the user.
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api/user/deleteUser:
    post:
      summary: Delete User
      description: Deletes a user by their ID.
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
            description: ID of the user to delete.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message after user deletion.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message if user deletion fails.
        '500':
          description: Internal Server Error
