name: Deploy on release

on:
  release:
    types: [published]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - run: npm --prefix userdetails_service ci
    - run: npm --prefix question_service ci
    - run: npm --prefix auth_service ci
    - run: npm --prefix webapp ci
    - run: npm --prefix game_service ci
    - run: npm --prefix friends_service ci
    - run: npm --prefix userdetails_service test -- --coverage
    - run: npm --prefix question_service test -- --coverage
    - run: npm --prefix auth_service test
    - run: npm --prefix webapp test -- --coverage
    - run: npm --prefix game_service test -- --coverage
    - run: npm --prefix friends_service test -- --coverage
    - name: Analyze with SonarCloud
      uses: sonarsource/sonarcloud-github-action@master
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  e2e-tests:
    needs: [unit-tests]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - run: npm --prefix auth_service install
    - run: npm --prefix game_service install
    - run: npm --prefix userdetails_service install
    - run: npm --prefix question_service install
    - run: npm --prefix friends_service install
    - run: npm --prefix webapp install
    - run: npm --prefix webapp run build
    - run: npm --prefix webapp run test:e2e
  docker-push-webapp:
    name: Push webapp Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      env:
        API_URI: http://${{ secrets.DEPLOY_HOST }}
      with:
          name: arquisoft/wiq_es1c/webapp
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: webapp
          buildargs: API_URI
  docker-push-userdetails:
    name: Push userdetails service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ e2e-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: arquisoft/wiq_es1c/userdetails
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: userdetails_service
  docker-push-friends:
    name: Push friends service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ e2e-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: arquisoft/wiq_es1c/friends
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: friends_service
  docker-push-game:
    name: Push game service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ e2e-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: arquisoft/wiq_es1c/game
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: game_service
  docker-push-question:
    name: Push question service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
          name: arquisoft/wiq_es1c/question
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: question_service
  docker-push-auth:
    name: Push auth service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
          name: arquisoft/wiq_es1c/auth
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: auth_service
  deploy:
    name: Deploy over SSH
    runs-on: ubuntu-latest
    needs: [docker-push-auth,docker-push-question,docker-push-userdetails,docker-push-webapp,docker-push-game,docker-push-friends]
    steps:
    - name: Deploy over SSH
      uses: fifsky/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        user: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        command: |
          mkdir grafana
          mkdir grafana/provisioning
          mkdir grafana/provisioning/dashboards
          mkdir grafana/provisioning/datasources
          mkdir prometheus
          wget https://raw.githubusercontent.com/arquisoft/wiq_es1c/master/grafana/provisioning/datasources/datasource.yml -O grafana/provisioning/datasources/datasource.yml
          wget https://raw.githubusercontent.com/arquisoft/wiq_es1c/master/grafana/provisioning/dashboards/dashboard.yml -O  grafana/provisioning/dashboards/dashboard.yml
          wget https://raw.githubusercontent.com/arquisoft/wiq_es1c/master/grafana/provisioning/dashboards/apiDashboard.json -O  grafana/provisioning/dashboards/apiDashboard.json
          wget https://raw.githubusercontent.com/arquisoft/wiq_es1c/master/prometheus/prometheus.yml -O prometheus/prometheus.yml
          wget https://raw.githubusercontent.com/arquisoft/wiq_es1c/master/docker-compose.yml -O docker-compose.yml
          wget https://raw.githubusercontent.com/arquisoft/wiq_es1c/master/.env -O .env
          docker compose --profile prod down
          docker compose --profile prod up -d --pull always